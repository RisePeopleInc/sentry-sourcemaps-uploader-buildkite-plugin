#!/bin/bash
set -ueo pipefail

export SENTRY_AUTH_TOKEN=${SENTRY_AUTH_TOKEN:-}
# see https://docs.sentry.io/cli/configuration/#configuration-values
export RELEASE_NAME=${BUILDKITE_PLUGIN_SENTRY_SOURCEMAPS_UPLOADER_RELEASE_NAME:-}
export STRIP_PREFIX=${BUILDKITE_PLUGIN_SENTRY_SOURCEMAPS_UPLOADER_STRIP_PREFIX:-}
export SENTRY_AUTH_TOKEN=${BUILDKITE_PLUGIN_SENTRY_SOURCEMAPS_UPLOADER_AUTH_TOKEN:-$SENTRY_AUTH_TOKEN}
export SOURCEMAPS_ARTIFACT=$BUILDKITE_PLUGIN_SENTRY_SOURCEMAPS_UPLOADER_SOURCEMAPS_ARTIFACT
export SENTRY_ORG=$BUILDKITE_PLUGIN_SENTRY_SOURCEMAPS_UPLOADER_ORG_NAME
export SENTRY_PROJECT=$BUILDKITE_PLUGIN_SENTRY_SOURCEMAPS_UPLOADER_PROJECT

export URL_PREFIX=""
if [ -n "${BUILDKITE_PLUGIN_SENTRY_SOURCEMAPS_UPLOADER_URL_PREFIX:-}" ]; then
  export URL_PREFIX="--url-prefix=$BUILDKITE_PLUGIN_SENTRY_SOURCEMAPS_UPLOADER_URL_PREFIX"
fi

if [ -z "$SENTRY_AUTH_TOKEN" ]; then
  echo "No auth token provided"
  exit 1
fi

ROOT_DIR="$( dirname "${BASH_SOURCE[0]}" )"
export PATH="$PATH:$ROOT_DIR"

on_failure() {
    echo "Command failed with exit status: $?"
    exit $?
}
trap on_failure ERR

set -x

mkdir -p downloaded_artifacts
buildkite-agent artifact download "${SOURCEMAPS_ARTIFACT}" downloaded_artifacts

if [ -z "$RELEASE_NAME" ]; then
  RELEASE_NAME=$(sentry-cli releases propose-version)
fi
sentry-cli releases new "$RELEASE_NAME"
# allow set-commits to fail since some people won't have VCS integration setup
if [ -e .git ]; then
  sentry-cli releases set-commits "$RELEASE_NAME" --auto || true
fi
sentry-cli releases files "$RELEASE_NAME" upload-sourcemaps "downloaded_artifacts/" "--strip-prefix=downloaded_artifacts/${STRIP_PREFIX}" "$URL_PREFIX"
sentry-cli releases finalize "$RELEASE_NAME"

echo "All Done"
